apply plugin: 'com.android.application'
apply plugin: 'checkstyle'


def versionPropsFile = file("${project.rootDir}/version.txt")
def buildPath = file("${project.rootDir}/build")
def versionBuild

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "by.client.android.railwayapp"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "$versionBuild"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
//    javaCompileOptions {
//        annotationProcessorOptions {
//            includeCompileClasspath true
//        }
//    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    aaptOptions {
        cruncherEnabled = false
    }
}

check.dependsOn 'checkstyle'
assemble.dependsOn 'loadVersion'

task checkstyle(type: Checkstyle) {
    configFile file("${project.rootDir}/config/checkstyle.xml")
    configProperties.checkstyleConfigDir = configFile.parentFile
    ignoreFailures = false
    source 'src/main/java'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'
    classpath = files()
}

task loadVersion {
    println "Loading version from $versionPropsFile"

    if (!versionPropsFile.exists()) {
        throw new GradleException("File $versionPropsFile not found")
    }
    if (!versionPropsFile.canRead()) {
        throw new GradleException("Could not read file $versionPropsFile")
    }

    def Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(versionPropsFile))
    versionBuild = versionProps['version']

    if (versionBuild == null) {
        throw new GradleException("Could not read 'versionBuild' param")
    }
    println "Version: $versionBuild"
}

repositories {
    maven { url "https://maven.google.com" }
    jcenter()
    maven { url "https://jitpack.io" }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile 'com.android.support:support-v4:27.1.1'
    compile 'com.android.support:appcompat-v7:27.1.1'
    compile 'com.android.support:design:27.1.1'
    compile 'org.jsoup:jsoup:1.10.3'
    annotationProcessor  'com.jakewharton:butterknife:6.1.0'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:converter-jackson:2.1.0'
    compile 'com.squareup.retrofit2:converter-moshi:2.1.0'
    compile 'com.google.dagger:dagger:2.7'
    compile 'org.androidannotations:androidannotations-api:4.4.0'
    compile 'com.android.support:cardview-v7:27.1.1'
    compile 'com.android.support:recyclerview-v7:27.1.1'
    compile 'com.android.support:support-vector-drawable:27.1.1'
    testCompile 'junit:junit:4.12'

    annotationProcessor  'com.google.dagger:dagger-compiler:2.7'
    annotationProcessor  'org.androidannotations:androidannotations:4.4.0'
    provided 'javax.annotation:jsr250-api:1.0'
    compile 'org.jetbrains:annotations-java5:15.0'

    compile 'com.koushikdutta.ion:ion:2.2.1'
    compile 'de.hdodenhof:circleimageview:2.2.0'

    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'

    implementation 'com.github.sharish:ShimmerRecyclerView:v1.3'
}
